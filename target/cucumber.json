[
  {
    "line": 1,
    "elements": [
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 14409000000,
              "status": "passed"
            },
            "line": 4,
            "name": "user has already logged into the application",
            "match": {
              "location": "parallel.AccountPageSteps.user_has_already_logged_into_the_application(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "emailId",
                  "password"
                ]
              },
              {
                "cells": [
                  "deepika.arya@gmail.com",
                  "Anshuarya@22"
                ]
              }
            ],
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2021-08-13T20:24:57.843Z",
        "before": [
          {
            "result": {
              "duration": 713000000,
              "status": "passed"
            },
            "match": {
              "location": "parallel.Applicationhooks.getProperty()"
            }
          },
          {
            "result": {
              "duration": 2665000000,
              "status": "passed"
            },
            "match": {
              "location": "parallel.Applicationhooks.launchBrowser()"
            }
          }
        ],
        "line": 9,
        "name": "Account Page Title",
        "description": "",
        "id": "account-page-feature;account-page-title",
        "after": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "match": {
              "location": "parallel.Applicationhooks.tearDown(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 1040000000,
              "status": "passed"
            },
            "match": {
              "location": "parallel.Applicationhooks.quitBrowser()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 10,
            "name": "user is on Accounts page",
            "match": {
              "location": "parallel.AccountPageSteps.user_is_on_accounts_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4873000000,
              "status": "passed"
            },
            "line": 11,
            "name": "page title should be \"My Account | Gap\"",
            "match": {
              "arguments": [
                {
                  "val": "\"My Account | Gap\"",
                  "offset": 21
                }
              ],
              "location": "parallel.GenericPageSteps.page_title_should_be(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@positive"
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 9835000000,
              "status": "passed"
            },
            "line": 4,
            "name": "user has already logged into the application",
            "match": {
              "location": "parallel.AccountPageSteps.user_has_already_logged_into_the_application(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "emailId",
                  "password"
                ]
              },
              {
                "cells": [
                  "deepika.arya@gmail.com",
                  "Anshuarya@22"
                ]
              }
            ],
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2021-08-13T20:25:21.674Z",
        "before": [
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "parallel.Applicationhooks.getProperty()"
            }
          },
          {
            "result": {
              "duration": 1534000000,
              "status": "passed"
            },
            "match": {
              "location": "parallel.Applicationhooks.launchBrowser()"
            }
          }
        ],
        "line": 14,
        "name": "",
        "description": "",
        "id": "account-page-feature;",
        "after": [
          {
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png",
                "name": ""
              }
            ],
            "result": {
              "duration": 84000000,
              "status": "passed"
            },
            "match": {
              "location": "parallel.Applicationhooks.tearDown(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 776000000,
              "status": "passed"
            },
            "match": {
              "location": "parallel.Applicationhooks.quitBrowser()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "user is on Accounts page",
            "match": {
              "location": "parallel.AccountPageSteps.user_is_on_accounts_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of all [] (tried for 20 second(s) with 500 milliseconds interval)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027LNAR-5CG009107N\u0027, ip: \u0027192.168.1.175\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027x86\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_144\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 92.0.4515.131, chrome: {chromedriverVersion: 92.0.4515.107 (87a818b10553..., userDataDir: C:\\WINDOWS\\TEMP\\scoped_dir9...}, goog:chromeOptions: {debuggerAddress: localhost:63145}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}\nSession ID: cb5ee6c1fd4347515614bb13ccdf89f7\r\n\tat org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)\r\n\tat org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)\r\n\tat com.gap.pages.AccountPage.getAccountSectionList(AccountPage.java:23)\r\n\tat parallel.AccountPageSteps.user_can_see_the_accounts_sections(AccountPageSteps.java:50)\r\n\tat ✽.user can see the accounts sections(file:///C:/Users/deearya/OneDrive%20-%20Capgemini/EclipseWorkspaces/RestAssuredWorkspace/GapCucumberBDD/src/test/resources/parallel/AccountPage.feature:16)\r\n",
              "duration": 20232000000,
              "status": "failed"
            },
            "line": 16,
            "name": "user can see the accounts sections",
            "match": {
              "location": "parallel.AccountPageSteps.user_can_see_the_accounts_sections(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ACCOUNT DETAILS"
                ]
              },
              {
                "cells": [
                  "ORDERS \u0026 RETURNS"
                ]
              },
              {
                "cells": [
                  "WALLET"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 20,
            "name": "account section count should be 3",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 32
                }
              ],
              "location": "parallel.AccountPageSteps.account_section_count_should_be(java.lang.Integer)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          }
        ]
      }
    ],
    "name": "Account Page feature",
    "description": "",
    "id": "account-page-feature",
    "keyword": "Feature",
    "uri": "file:src/test/resources/parallel/AccountPage.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2203000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters the url \"http://www.gap.com\"",
            "match": {
              "arguments": [
                {
                  "val": "\"http://www.gap.com\"",
                  "offset": 20
                }
              ],
              "location": "parallel.LoginPageSteps.user_enters_the_url(java.lang.String)"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2021-08-13T20:25:54.163Z",
        "before": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "match": {
              "location": "parallel.Applicationhooks.getProperty()"
            }
          },
          {
            "result": {
              "duration": 1970000000,
              "status": "passed"
            },
            "match": {
              "location": "parallel.Applicationhooks.launchBrowser()"
            }
          }
        ],
        "line": 8,
        "name": "Login Page Title",
        "description": "",
        "id": "login-page-feature;login-page-title",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "parallel.Applicationhooks.tearDown(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 612000000,
              "status": "passed"
            },
            "match": {
              "location": "parallel.Applicationhooks.quitBrowser()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "line": 9,
            "name": "page title should be \"Shop Gap for Casual Women\u0027s, Men\u0027s, Maternity, Baby \u0026 Kids Clothes\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Shop Gap for Casual Women\u0027s, Men\u0027s, Maternity, Baby \u0026 Kids Clothes\"",
                  "offset": 21
                }
              ],
              "location": "parallel.GenericPageSteps.page_title_should_be(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@positive"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3407000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters the url \"http://www.gap.com\"",
            "match": {
              "arguments": [
                {
                  "val": "\"http://www.gap.com\"",
                  "offset": 20
                }
              ],
              "location": "parallel.LoginPageSteps.user_enters_the_url(java.lang.String)"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2021-08-13T20:25:58.984Z",
        "before": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "match": {
              "location": "parallel.Applicationhooks.getProperty()"
            }
          },
          {
            "result": {
              "duration": 2222000000,
              "status": "passed"
            },
            "match": {
              "location": "parallel.Applicationhooks.launchBrowser()"
            }
          }
        ],
        "line": 21,
        "name": "Login to Application using different set of data",
        "description": "",
        "id": "login-page-feature;login-to-application-using-different-set-of-data;;2",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "parallel.Applicationhooks.tearDown(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 874000000,
              "status": "passed"
            },
            "match": {
              "location": "parallel.Applicationhooks.quitBrowser()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8905000000,
              "status": "passed"
            },
            "line": 12,
            "name": "user clicks on Sign In Link",
            "match": {
              "location": "parallel.LoginPageSteps.user_clicks_on_sign_in_link()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1916000000,
              "status": "passed"
            },
            "line": 13,
            "name": "user enters the emailId as \"ge.crocus1@gmail.com\"",
            "match": {
              "arguments": [
                {
                  "val": "\"ge.crocus1@gmail.com\"",
                  "offset": 27
                }
              ],
              "location": "parallel.LoginPageSteps.user_enters_the_email_id_as(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1678000000,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters the password as \"Gecrocus@22\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Gecrocus@22\"",
                  "offset": 28
                }
              ],
              "location": "parallel.LoginPageSteps.user_enters_the_password_as(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 740000000,
              "status": "passed"
            },
            "line": 15,
            "name": "user clicks on Sign In Button",
            "match": {
              "location": "parallel.LoginPageSteps.user_clicks_on_sign_in_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 16,
            "name": "user is navigated to signin page",
            "match": {
              "location": "parallel.LoginPageSteps.user_is_navigated_to_signin_page()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5377000000,
              "status": "passed"
            },
            "line": 17,
            "name": "user is able to see greetings as \"Hello Ge!\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Hello Ge!\"",
                  "offset": 33
                }
              ],
              "location": "parallel.LoginPageSteps.user_is_able_to_see_greetings_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@SmokeTest"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2430000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters the url \"http://www.gap.com\"",
            "match": {
              "arguments": [
                {
                  "val": "\"http://www.gap.com\"",
                  "offset": 20
                }
              ],
              "location": "parallel.LoginPageSteps.user_enters_the_url(java.lang.String)"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2021-08-13T20:26:24.136Z",
        "before": [
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "parallel.Applicationhooks.getProperty()"
            }
          },
          {
            "result": {
              "duration": 1586000000,
              "status": "passed"
            },
            "match": {
              "location": "parallel.Applicationhooks.launchBrowser()"
            }
          }
        ],
        "line": 22,
        "name": "Login to Application using different set of data",
        "description": "",
        "id": "login-page-feature;login-to-application-using-different-set-of-data;;3",
        "after": [
          {
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png",
                "name": "Login_to_Application_using_different_set_of_data"
              }
            ],
            "result": {
              "duration": 90000000,
              "status": "passed"
            },
            "match": {
              "location": "parallel.Applicationhooks.tearDown(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 767000000,
              "status": "passed"
            },
            "match": {
              "location": "parallel.Applicationhooks.quitBrowser()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6362000000,
              "status": "passed"
            },
            "line": 12,
            "name": "user clicks on Sign In Link",
            "match": {
              "location": "parallel.LoginPageSteps.user_clicks_on_sign_in_link()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 281000000,
              "status": "passed"
            },
            "line": 13,
            "name": "user enters the emailId as \"deepika.arya@gmail.com\"",
            "match": {
              "arguments": [
                {
                  "val": "\"deepika.arya@gmail.com\"",
                  "offset": 27
                }
              ],
              "location": "parallel.LoginPageSteps.user_enters_the_email_id_as(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1808000000,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters the password as \"Anshuarya@22\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Anshuarya@22\"",
                  "offset": 28
                }
              ],
              "location": "parallel.LoginPageSteps.user_enters_the_password_as(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 909000000,
              "status": "passed"
            },
            "line": 15,
            "name": "user clicks on Sign In Button",
            "match": {
              "location": "parallel.LoginPageSteps.user_clicks_on_sign_in_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 16,
            "name": "user is navigated to signin page",
            "match": {
              "location": "parallel.LoginPageSteps.user_is_navigated_to_signin_page()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.TimeoutException: Expected condition failed: waiting for com.gap.pages.LoginPage$$Lambda$535/11448105@ded903 (tried for 20 second(s) with 500 milliseconds interval)\r\n\tat org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)\r\n\tat org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)\r\n\tat com.gap.pages.LoginPage.getGreetings(LoginPage.java:82)\r\n\tat parallel.LoginPageSteps.user_is_able_to_see_greetings_as(LoginPageSteps.java:67)\r\n\tat ✽.user is able to see greetings as \"Hello Deepika!\"(file:///C:/Users/deearya/OneDrive%20-%20Capgemini/EclipseWorkspaces/RestAssuredWorkspace/GapCucumberBDD/src/test/resources/parallel/LoginPage.feature:17)\r\nCaused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@id\u003d\u0027profile-root\u0027]//h3[@id\u003d\u0027rewardsHeading\u0027]\"}\n  (Session info: chrome\u003d92.0.4515.131)\nFor documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027LNAR-5CG009107N\u0027, ip: \u0027192.168.1.175\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027x86\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_144\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 92.0.4515.131, chrome: {chromedriverVersion: 92.0.4515.107 (87a818b10553..., userDataDir: C:\\WINDOWS\\TEMP\\scoped_dir7...}, goog:chromeOptions: {debuggerAddress: localhost:62755}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}\nSession ID: a641808a663cec1770c7ec919e26c8dd\n*** Element info: {Using\u003dxpath, value\u003d//div[@id\u003d\u0027profile-root\u0027]//h3[@id\u003d\u0027rewardsHeading\u0027]}\r\n\tat sun.reflect.GeneratedConstructorAccessor15.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)\r\n\tat java.lang.reflect.Constructor.newInstance(Unknown Source)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)\r\n\tat org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)\r\n\tat org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)\r\n\tat com.sun.proxy.$Proxy28.isDisplayed(Unknown Source)\r\n\tat com.gap.pages.LoginPage.lambda$4(LoginPage.java:82)\r\n\tat org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)\r\n\tat com.gap.pages.LoginPage.getGreetings(LoginPage.java:82)\r\n\tat parallel.LoginPageSteps.user_is_able_to_see_greetings_as(LoginPageSteps.java:67)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\r\n\tat java.lang.reflect.Method.invoke(Unknown Source)\r\n\tat io.cucumber.java.Invoker.doInvoke(Invoker.java:66)\r\n\tat io.cucumber.java.Invoker.invoke(Invoker.java:24)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:92)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:64)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:104)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:71)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:151)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:135)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:27)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:199)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:90)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:234)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.testng.junit.JUnit4TestRunner.start(JUnit4TestRunner.java:82)\r\n\tat org.testng.junit.JUnit4TestRunner.run(JUnit4TestRunner.java:70)\r\n\tat org.testng.TestRunner$1.run(TestRunner.java:570)\r\n\tat org.testng.TestRunner.runJUnitWorkers(TestRunner.java:717)\r\n\tat org.testng.TestRunner.privateRunJUnit(TestRunner.java:601)\r\n\tat org.testng.TestRunner.run(TestRunner.java:502)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:455)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:364)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1137)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1049)\r\n\tat org.testng.TestNG.run(TestNG.java:1017)\r\n\tat org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)\r\n\tat org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:112)\r\n\tat org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeLazy(TestNGDirectoryTestSuite.java:123)\r\n\tat org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:90)\r\n\tat org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\n",
              "duration": 20243000000,
              "status": "failed"
            },
            "line": 17,
            "name": "user is able to see greetings as \"Hello Deepika!\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Hello Deepika!\"",
                  "offset": 33
                }
              ],
              "location": "parallel.LoginPageSteps.user_is_able_to_see_greetings_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@SmokeTest"
          }
        ]
      }
    ],
    "name": "Login Page feature",
    "description": "",
    "id": "login-page-feature",
    "keyword": "Feature",
    "uri": "file:src/test/resources/parallel/LoginPage.feature",
    "tags": [
      {
        "name": "@SmokeTest",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  }
]